<!doctype html>
<html lang="en">
  <head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">


    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <link href="https://cdn.datatables.net/2.3.3/css/dataTables.dataTables.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/css/select2.min.css" integrity="sha512-nMNlpuaDPrqlEls3IX/Q56H36qvBASwb3ipuo3MxeWbsQB1881ox0cRv7UPTgBlriqoynt35KjEwgGUeUXIPnw==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/select2-bootstrap-5-theme@1.3.0/dist/select2-bootstrap-5-theme.min.css" />

    <title>Tarea</title>
  </head>
  <body>

    <div class="content">
      <!-- Filtros -->
      <div class="container mt-5">
        <h1>Precios de múltiples productos</h1>
        <div class="row">
          <form id="multiple-product-prices-form" class="row g-3">
            <div class="col-md-2">
              <label for="rental_location_id" class="form-label">Sucursal</label>
              <select name="rental_location_id" class="form-select">
                <option value="">Seleccione una sucursal</option>
                <% @rental_locations.each do |rental_location| %>
                  <option value="<%= rental_location.id %>"><%= rental_location.name %></option>
                <% end %>
              </select>
            </div>
            <div class="col-md-2">
              <label for="rate_type_id" class="form-label">Tipo de tarifa</label>
              <select name="rate_type_id" class="form-select">
                <option value="">Seleccione un tipo de tarifa</option>
                
              </select>
            </div>
            <div class="col-md-3">
              <label for="season_definition_id" class="form-label">Grupo de temporadas</label>
              <select name="season_definition_id" class="form-select">
                <option value="">Tarifas sin temporadas</option>
                
              </select>
            </div>
            <div class="col-md-2">
              <label for="season_id" class="form-label">Temporada</label>
              <select name="season_id" class="form-select">
                <option value="">Seleccione la temporada</option>
              
              </select>
            </div>
            <div class="col-md-2">
              <label for="time_measurement" class="form-label">Duración</label>
              <select name="time_measurement" class="form-select">
                <option value="">Seleccione la unidad</option>
                <option value="1">Meses</option>
                <option value="2" selected>Días</option>
                <option value="3">Horas</option>
                <option value="4">Minutos</option>
              </select>
            </div>
            <div class="col-md-1">
              <button class="btn btn-primary w-100" style="margin-top: 32px;">Filtrar</button>
            </div>
          </form>
        </div>
      </div>
      <hr>
      <!-- Tabla con las tarifas -->
      <div class="container">
        <div class="row">
          <div class="col-12">
            <table id="prices_table" class="table table-hover">
              
            </table>
          </div>
        </div>
      </div>
      <!-- Acciones -->
      <div class="container">
        <div class="row">
          <div class="col-12">
            <button class="btn btn-secondary w-100">Importar</button>
          </div>
      </div> 
    </div>

    <script src="https://cdn.jsdelivr.net/npm/jquery@3.5.0/dist/jquery.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
    <script src="https://cdn.datatables.net/2.3.3/js/dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/2.3.3/js/dataTables.bootstrap5.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js" integrity="sha512-2ImtlRlf2VVmiGZsjm9bEyhjGW4dU7B6TNwh/hx/iSByxNENtj3WVE6o/9Lj4TJeVXPi4bnOIMXFIJJAeufa0A==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
    
    <script>
      function loadRateTypes(rental_location_id) {
        endpoint = `/api/rental-locations/${rental_location_id}/rate-types`;
        select_selector = 'select[name="rate_type_id"]';
        return reloadSelector(endpoint, select_selector);
      }

      function loadSeasonDefinitions(rate_type_id, rental_location_id) {
        endpoint = `/api/rate-types/${rate_type_id}/season-definitions?rental_location_id=${rental_location_id}`;
        select_selector = 'select[name="season_definition_id"]';
        if (rate_type_id && rental_location_id) {
          return reloadSelector(endpoint, select_selector);
        }
        return;
      }

      function loadSeasons(season_definition_id, rate_type_id, rental_location_id) {
        endpoint = `/api/season-definitions/${season_definition_id}/seasons?rental_location_id=${rental_location_id}&rate_type_id=${rate_type_id}`;
        select_selector = 'select[name="season_id"]';
        resetSelect(select_selector);
        if (season_definition_id && rate_type_id && rental_location_id) {
          return reloadSelector(endpoint, select_selector);
        }
        return;
      }

      async function reloadSelector(endpoint, select_selector) {
        try {
            const res = await fetch(endpoint);
            if (!res.ok) throw new Error(`Error HTTP ${res.status}`);
            const data = await res.json();

            resetSelect(select_selector);

            if (!Array.isArray(data) || data.length === 0) return;

            fillSelect(select_selector, data);

          } catch (err) {
            console.error(err);
          }
          return;
      }

      function resetSelect(select_selector) {
        // Mantiene solo la opción con value=""
        $(select_selector + ' option').not('[value=""]').remove();
      }

      function fillSelect(select_selector, options) {
        const $select = $(select_selector);

        options.forEach(opt => {
          $select.append(
            $('<option>', { value: opt.id, text: opt.name })
          );
        });

        $select.trigger('change');
      }

      function initializeSelectors() {
        $('select[name="rental_location_id"]').select2({
          theme: 'bootstrap-5'
        });
        $('select[name="rate_type_id"]').select2({
          theme: 'bootstrap-5'
        });
        $('select[name="season_definition_id"]').select2({
          theme: 'bootstrap-5'
        });
        $('select[name="season_id"]').select2({
          theme: 'bootstrap-5'
        });
      }

      function initializeDataTable() {
        $('#prices_table').dataTable({
          paging: true,
          searching: false,
          info: true
        });
      }

      function handleSelectChange() {
        $('select[name="rental_location_id"]').change(function () {
          rental_location_id = $(this).val();
          loadRateTypes(rental_location_id);
        });

        $('select[name="rate_type_id"]').change(function () {
          rate_type_id = $(this).val();
          rental_location_id = $('select[name="rental_location_id"]').val()
          loadSeasonDefinitions(rate_type_id, rental_location_id);
        });

        $('select[name="season_definition_id"]').change(function () {
          season_definition_id = $(this).val();
          rate_type_id = $('select[name="rate_type_id"]').val()
          rental_location_id = $('select[name="rental_location_id"]').val()
          loadSeasons(season_definition_id, rate_type_id, rental_location_id);
        });
      }

      function handleFormSubmit() {
        $('#multiple-product-prices-form').submit(function (e) {
          e.preventDefault();

          if (!isFormValid()) return;

          const filters = getFilters();
          const query_string = getFiltersQueryString(filters);
          submitForm(query_string);
        });
      }

      function isFormValid() {
        empties = [];
        if (!$('select[name="rental_location_id"]').val()) {
          empties.push('Sucursal');
        }
        if (!$('select[name="rate_type_id"]').val()) {
          empties.push('Tipo de tarifa');
        }
        if ($('select[name="season_definition_id"]').val() && !$('select[name="season_id"]').val()) {
          empties.push('Temporada');
        }
        if (!$('select[name="time_measurement"]').val()) {
          empties.push('Duración');
        }

        if (empties.length) {
          validation_message = 'Por favor, seleccione ';
          switch (empties.length) {
            case 1:
              validation_message += empties[0] + '.';
              break;
            case 2:
              validation_message += empties.join(' y ') + '.';
              break;
            default:
              validation_message += empties.slice(0, -1).join(', ') + ' y ' + empties.slice(-1) + '.';
              break;
          }
          alert(validation_message);
          return false;
        }

        return true;
      }

      function getFilters() {
        return {
            rental_location_id: $('select[name="rental_location_id"]').val(),
            rate_type_id: $('select[name="rate_type_id"]').val(),
            season_definition_id: $('select[name="season_definition_id"]').val(),
            season_id: $('select[name="season_id"]').val(),
            time_measurement: $('select[name="time_measurement"]').val()
          };
      }

      function getFiltersQueryString(filters) {
        const search_params = new URLSearchParams();
        Object.entries(filters).forEach(([k, v]) => { if (v) search_params.append(k, v); });
        return search_params.toString();
      }

      async function submitForm(query_string) {
        try {
          const res = await fetch(`/api/prices?${query_string}`);
          if (!res.ok) throw new Error(`HTTP ${res.status}`);
          const data = await res.json();

          headers = data.headers;
          rows = data.rows;

          console.log(headers);
          console.log(rows);

          if ($.fn.DataTable.isDataTable('#prices_table')) {
            $('#prices_table').DataTable().clear().destroy();
            $('#prices_table').empty(); // importante: limpia thead/tbody antiguos
          }

          // Crear tabla con las nuevas columnas y filas
          $('#prices_table').DataTable({
            data: rows,
            columns: headers.map(h => ({ title: h })),
            paging: true,
            searching: false,
            info: true
          });

        } catch (e) {
          console.error(e);
          alert('Error al cargar precios');
        }
      }

      $(document).ready(function() {
        initializeSelectors();
        initializeDataTable();
        handleSelectChange();
        handleFormSubmit();
      });
    </script>
  </body>
</html>